{"version":3,"sources":["../src/functional/Namespace/protobuf.ts"],"sourcesContent":["import { $ProtobufReader } from \"../$ProtobufReader\";\nimport { $ProtobufSizer } from \"../$ProtobufSizer\";\nimport { $ProtobufWriter } from \"../$ProtobufWriter\";\nimport { $strlen } from \"../$strlen\";\nimport { $throws } from \"../$throws\";\nimport { is } from \"../is\";\n\nexport const decode = (method: string) => ({\n  ...is(),\n  Reader: $ProtobufReader,\n  throws: $throws(`protobuf.${method}`),\n});\n\nexport const encode = (method: string) => ({\n  ...is(),\n  Sizer: $ProtobufSizer,\n  Writer: $ProtobufWriter,\n  strlen: $strlen,\n  throws: $throws(method),\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAOO,IAAMA,SAAS,wBAACC,YAAoB;EACzC,GAAGC,GAAAA;EACHC,QAAQC;EACRC,QAAQC,QAAQ,YAAYL,MAAAA,EAAQ;AACtC,IAJsB;AAMf,IAAMM,SAAS,wBAACN,YAAoB;EACzC,GAAGC,GAAAA;EACHM,OAAOC;EACPC,QAAQC;EACRC,QAAQC;EACRR,QAAQC,QAAQL,MAAAA;AAClB,IANsB;","names":["decode","method","is","Reader","$ProtobufReader","throws","$throws","encode","Sizer","$ProtobufSizer","Writer","$ProtobufWriter","strlen","$strlen"]}