{"version":3,"sources":["../src/utils/NameEncoder.ts"],"sourcesContent":["export namespace NameEncoder {\n  export function encode(str: string): string {\n    for (const [before, after] of REPLACERS)\n      str = str.split(before).join(after);\n    return str;\n  }\n\n  export function decode(str: string): string {\n    for (const [before, after] of REPLACERS)\n      if (after !== \"\") str = str.split(after).join(before);\n    return str;\n  }\n}\n\nconst REPLACERS: [string, string][] = [\n  [\"$\", \"_dollar_\"],\n  [\"&\", \"_and_\"],\n  [\"|\", \"_or_\"],\n  [\"{\", \"_blt_\"],\n  [\"}\", \"_bgt_\"],\n  [\"<\", \"_lt_\"],\n  [\">\", \"_gt_\"],\n  [\"(\", \"_lp_\"],\n  [\")\", \"_rp_\"],\n  [\"[\", \"_alt_\"],\n  [\"]\", \"_agt_\"],\n  [\",\", \"_comma_\"],\n  [\"`\", \"_backquote_\"],\n  [\"'\", \"_singlequote_\"],\n  ['\"', \"_doublequote_\"],\n  [\" \", \"_space_\"],\n];\n"],"mappings":";;;;;;UAAiBA,cAAAA;AACR,WAASC,OAAOC,KAAW;AAChC,eAAW,CAACC,QAAQC,KAAAA,KAAUC,UAC5BH,OAAMA,IAAII,MAAMH,MAAAA,EAAQI,KAAKH,KAAAA;AAC/B,WAAOF;EACT;AAJgBD;eAAAA,SAAAA;AAMT,WAASO,OAAON,KAAW;AAChC,eAAW,CAACC,QAAQC,KAAAA,KAAUC,UAC5B,KAAID,UAAU,GAAIF,OAAMA,IAAII,MAAMF,KAAAA,EAAOG,KAAKJ,MAAAA;AAChD,WAAOD;EACT;AAJgBM;eAAAA,SAAAA;AAKlB,GAZiBR,gBAAAA,cAAAA,CAAAA,EAAAA;AAcjB,IAAMK,YAAgC;EACpC;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;EACN;IAAC;IAAK;;;","names":["NameEncoder","encode","str","before","after","REPLACERS","split","join","decode"]}