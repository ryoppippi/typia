{"version":3,"sources":["../src/functional/$every.ts"],"names":["$every","array","pred","error","i","length"],"mappings":";;;;;AAEO,IAAMA,SAAS,wBACpBC,OACAC,SAAAA;AAEA,MAAIC,QAAsD;AAC1D,WAASC,IAAY,GAAGA,IAAIH,MAAMI,QAAQ,EAAED,EAC1C,KAAI,UAAUD,QAAQD,KAAKD,MAAMG,CAAAA,GAAKA,CAAAA,GAAK,QAAOD;AACpD,SAAO;AACT,GARsB","sourcesContent":["import { TypeGuardError } from \"../TypeGuardError\";\n\nexport const $every = <T>(\n  array: T[],\n  pred: (value: T, i: number) => null | Omit<TypeGuardError.IProps, \"method\">,\n): null | Omit<TypeGuardError.IProps, \"method\"> => {\n  let error: null | Omit<TypeGuardError.IProps, \"method\"> = null;\n  for (let i: number = 0; i < array.length; ++i)\n    if (null !== (error = pred(array[i]!, i))) return error;\n  return null;\n};\n"]}