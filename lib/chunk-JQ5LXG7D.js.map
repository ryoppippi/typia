{"version":3,"sources":["../src/utils/PatternUtil.ts"],"names":["PatternUtil","fix","str","first","indexOf","STRING","last","lastIndexOf","none","slice","length","join","escape","replace","NUMBER","BOOLEAN","parenthesis","ch"],"mappings":";;;;;;UAAiBA,cAAAA;eACFC,MAAM,CAACC,QAAAA;AAClB,UAAMC,QAAgBD,IAAIE,QAAOJ,aAACK,MAAAA;AAClC,UAAMC,OAAeJ,IAAIK,YAAWP,aAACK,MAAAA;AACrC,WAAO;MACLF,UAAU,MAAMK,KAAK,GAAA,EAAKN,IAAIO,MAAM,GAAGN,KAAAA,CAAAA,IAAU,MAAM;MACvDD;MACAI,SAAS,MAAME,KAAK,GAAA,EAAKN,IAAIO,MAAMH,OAAOD,aAAAA,OAAOK,MAAM,CAAA,IAAK,MAAM;MAClEC,KAAK,EAAA;EACT;eAEaC,SAAS,CAACV,QAAAA;AACrB,WAAOA,IAAIW,QAAQ,wBAAwB,MAAA,EAAQA,QAAQ,MAAM,OAAA;EACnE;eAEaC,SACX;eAGWC,UAAU;eACVV,SAAS;AACxB,GArBiBL,gBAAAA,cAAAA,CAAAA,EAAAA;AAuBjB,IAAMQ,OACJ,wBAACQ,gBACD,CAACd,QAAAA;AACC,aAAWe,MAAMf,IAAK,KAAIe,OAAOD,YAAa,QAAO;AACrD,SAAO;AACT,GAJA","sourcesContent":["export namespace PatternUtil {\n  export const fix = (str: string): string => {\n    const first: number = str.indexOf(STRING);\n    const last: number = str.lastIndexOf(STRING);\n    return [\n      first === -1 || none(\"(\")(str.slice(0, first)) ? \"^\" : \"\",\n      str,\n      last === -1 || none(\")\")(str.slice(last + STRING.length)) ? \"$\" : \"\",\n    ].join(\"\");\n  };\n\n  export const escape = (str: string): string => {\n    return str.replace(/[|\\\\/{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n  };\n\n  export const NUMBER =\n    \"[+-]?\" + // optional sign\n    \"\\\\d+(?:\\\\.\\\\d+)?\" + // integer or decimal\n    \"(?:[eE][+-]?\\\\d+)?\"; // optional exponent\n  export const BOOLEAN = \"true|false\";\n  export const STRING = \"(.*)\";\n}\n\nconst none =\n  (parenthesis: string) =>\n  (str: string): boolean => {\n    for (const ch of str) if (ch !== parenthesis) return true;\n    return false;\n  };\n"]}