{"version":3,"sources":["../../src/functional/$dictionary.ts"],"names":["blackhole","$dictionary","glob","global","process","versions","node","self","__typia_custom_validator","Map"],"mappings":";;;AAKA,IAAMA,YAAiB,CAAC;AAEjB,IAAMC,eAAe,MAAA;AAC1B,QAAMC,OAMJ,OAAOC,WAAW,YAClB,OAAOA,OAAOC,YAAY,YAC1B,OAAOD,OAAOC,QAAQC,aAAa,YACnC,OAAOF,OAAOC,QAAQC,SAASC,SAAS,cAClCH,UAAUH,YACVO,QAAQP;AAChB,SAAQE,KAAKM,6BAA6B,oBAAIC,IAAAA;AAChD,GAAA","sourcesContent":["import { Customizable } from \"../typings/Customizable\";\n\n/**\n * @internal\n */\nconst blackhole: any = {};\n\nexport const $dictionary = (() => {\n  const glob: {\n    __typia_custom_validator: Map<\n      `${string}`,\n      Map<keyof Customizable, (tagText: string) => (value: any) => boolean>\n    >;\n  } =\n    typeof global === \"object\" &&\n    typeof global.process === \"object\" &&\n    typeof global.process.versions === \"object\" &&\n    typeof global.process.versions.node !== \"undefined\"\n      ? ((global ?? blackhole) as any)\n      : ((self ?? blackhole) as any);\n  return (glob.__typia_custom_validator ??= new Map());\n})();\n"]}