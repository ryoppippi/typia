{"version":3,"sources":["../../src/functional/$zigzag.ts"],"names":["$zigzag_encode","value","BigInt","$zigzag_decode","asUintN"],"mappings":";;;;;AAEO,SAASA,eAAeC,OAAsB;AAGnD,MAAI,OAAOA,UAAU,UAAU;AAC7B,QAAIA,QAAQC,OAAO,CAAA,GAAI;AACrBD,cAAQ,CAACA;AACT,aAAOA,QAAQC,OAAO,CAAA,IAAKA,OAAO,CAAA;IACpC;AACA,WAAOD,QAAQC,OAAO,CAAA;EACxB;AAEA,MAAID,QAAQ,GAAG;AACbA,YAAQ,CAACA;AACT,WAAOA,QAAQ,IAAI;EACrB;AACA,SAAOA,QAAQ;AACjB;AAhBgBD;AAoBT,SAASG,eAAeF,OAAsB;AAGnD,MAAI,OAAOA,UAAU,UAAU;AAC7BA,YAAQC,OAAOE,QAAQ,IAAIH,KAAAA;AAC3B,QAAIA,QAAQC,OAAO,CAAA,GAAI;AACrB,aAAO,EAAED,QAAQC,OAAO,CAAA,KAAMA,OAAO,CAAA;IACvC;AACA,WAAOD,QAAQC,OAAO,CAAA;EACxB;AAEAD,UAAQA,UAAU;AAClB,MAAIA,QAAQ,GAAG;AACb,WAAO,EAAEA,QAAQ,KAAK;EACxB;AACA,SAAOA,QAAQ;AACjB;AAhBgBE","sourcesContent":["export function $zigzag_encode(value: number): number;\nexport function $zigzag_encode(value: bigint): bigint;\nexport function $zigzag_encode(value: number | bigint): any {\n  // TODO: optimize (branchless solution exists)\n\n  if (typeof value === \"bigint\") {\n    if (value < BigInt(0)) {\n      value = -value;\n      return value * BigInt(2) - BigInt(1);\n    }\n    return value * BigInt(2);\n  }\n\n  if (value < 0) {\n    value = -value;\n    return value * 2 - 1;\n  }\n  return value * 2;\n}\n\nexport function $zigzag_decode(value: number): number;\nexport function $zigzag_decode(value: bigint): bigint;\nexport function $zigzag_decode(value: number | bigint): any {\n  // TODO: optimize (branchless solution exists)\n\n  if (typeof value === \"bigint\") {\n    value = BigInt.asUintN(64, value);\n    if (value & BigInt(1)) {\n      return -(value + BigInt(1)) / BigInt(2);\n    }\n    return value / BigInt(2);\n  }\n\n  value = value >>> 0;\n  if (value & 1) {\n    return -(value + 1) / 2;\n  }\n  return value / 2;\n}\n"]}