{"version":3,"sources":["../src/schemas/metadata/MetadataComponents.ts"],"names":["MetadataComponents","aliases","objects","arrays","tuples","dictionary","props","from","json","Map","map","obj","name","MetadataObject","_From_without_properties","alias","MetadataAlias","_From_without_value","arr","MetadataArrayType","tpl","MetadataTupleType","_From_without_elements","get","properties","push","prop","MetadataProperty","Writable","value","Metadata","array","tuple","elements","elem","values","toJSON","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,IAAMA,qBAAN,MAAMA,oBAAAA;EAXb,OAWaA;;;EACKC;EACAC;EACAC;EACAC;EACAC;EAEhB,YAAoBC,OAA4C;AAC9D,SAAKL,UAAUK,MAAML;AACrB,SAAKC,UAAUI,MAAMJ;AACrB,SAAKC,SAASG,MAAMH;AACpB,SAAKC,SAASE,MAAMF;AACpB,SAAKC,aAAaC,MAAMD;EAC1B;EAEA,OAAcE,KAAKC,MAA+C;AAEhE,UAAMH,aAAkC;MACtCH,SAAS,IAAIO,IACXD,KAAKN,QAAQQ,IAAI,CAACC,QAAQ;QACxBA,IAAIC;QACJC,eAAeC,yBAAyBH,GAAAA;OACzC,CAAA;MAEHV,SAAS,IAAIQ,IACXD,KAAKP,QAAQS,IAAI,CAACK,UAAU;QAC1BA,MAAMH;QACNI,cAAcC,oBAAoBF,KAAAA;OACnC,CAAA;MAEHZ,QAAQ,IAAIM,IACVD,KAAKL,OAAOO,IAAI,CAACQ,QAAQ;QACvBA,IAAIN;QACJO,kBAAkBF,oBAAoBC,GAAAA;OACvC,CAAA;MAEHd,QAAQ,IAAIK,IACVD,KAAKJ,OAAOM,IAAI,CAACU,QAAQ;QACvBA,IAAIR;QACJS,kBAAkBC,uBAAuBF,GAAAA;OAC1C,CAAA;IAEL;AAGA,eAAWT,OAAOH,KAAKN,QACrBG,YAAWH,QACRqB,IAAIZ,IAAIC,IAAI,EACZY,WAAWC,KAAI,GACXd,IAAIa,WAAWd,IAAI,CAACgB,SACrBC,iBAAiBpB,KAAKmB,MAAMrB,UAAAA,CAAAA,CAAAA;AAGpC,eAAWU,SAASP,KAAKP,QACvB2B,UAASvB,WAAWJ,QAAQsB,IAAIR,MAAMH,IAAI,CAAA,EAAIiB,QAAQC,SAASvB,KAC7DQ,MAAMc,OACNxB,UAAAA;AAEJ,eAAW0B,SAASvB,KAAKL,OACvByB,UAASvB,WAAWF,OAAOoB,IAAIQ,MAAMnB,IAAI,CAAA,EAAIiB,QAAQC,SAASvB,KAC5DwB,MAAMF,OACNxB,UAAAA;AAEJ,eAAW2B,SAASxB,KAAKJ,OACvBwB,UAASvB,WAAWD,OAAOmB,IAAIS,MAAMpB,IAAI,CAAA,EAAIqB,WAC3CD,MAAMC,SAASvB,IAAI,CAACwB,SAASJ,SAASvB,KAAK2B,MAAM7B,UAAAA,CAAAA;AAGrD,WAAO,IAAIL,oBAAmB;MAC5BC,SAAS;WAAII,WAAWJ,QAAQkC,OAAM;;MACtCjC,SAAS;WAAIG,WAAWH,QAAQiC,OAAM;;MACtChC,QAAQ;WAAIE,WAAWF,OAAOgC,OAAM;;MACpC/B,QAAQ;WAAIC,WAAWD,OAAO+B,OAAM;;MACpC9B;IACF,CAAA;EACF;EAEO+B,SAA8B;AACnC,WAAO;MACLnC,SAAS,KAAKA,QAAQS,IAAI,CAACK,UAAUA,MAAMqB,OAAM,CAAA;MACjDlC,SAAS,KAAKA,QAAQQ,IAAI,CAAC2B,WAAWA,OAAOD,OAAM,CAAA;MACnDjC,QAAQ,KAAKA,OAAOO,IAAI,CAACqB,UAAUA,MAAMK,OAAM,CAAA;MAC/ChC,QAAQ,KAAKA,OAAOM,IAAI,CAACsB,UAAUA,MAAMI,OAAM,CAAA;IACjD;EACF;AACF","sourcesContent":["import { ClassProperties } from \"../../typings/ClassProperties\";\nimport { Writable } from \"../../typings/Writable\";\n\nimport { IMetadataComponents } from \"./IMetadataComponents\";\nimport { IMetadataDictionary } from \"./IMetadataDictionary\";\nimport { Metadata } from \"./Metadata\";\nimport { MetadataAlias } from \"./MetadataAlias\";\nimport { MetadataArrayType } from \"./MetadataArrayType\";\nimport { MetadataObject } from \"./MetadataObject\";\nimport { MetadataProperty } from \"./MetadataProperty\";\nimport { MetadataTupleType } from \"./MetadataTupleType\";\n\nexport class MetadataComponents {\n  public readonly aliases: MetadataAlias[];\n  public readonly objects: MetadataObject[];\n  public readonly arrays: MetadataArrayType[];\n  public readonly tuples: MetadataTupleType[];\n  public readonly dictionary: IMetadataDictionary;\n\n  private constructor(props: ClassProperties<MetadataComponents>) {\n    this.aliases = props.aliases;\n    this.objects = props.objects;\n    this.arrays = props.arrays;\n    this.tuples = props.tuples;\n    this.dictionary = props.dictionary;\n  }\n\n  public static from(json: IMetadataComponents): MetadataComponents {\n    // INITIALIZE COMPONENTS\n    const dictionary: IMetadataDictionary = {\n      objects: new Map(\n        json.objects.map((obj) => [\n          obj.name,\n          MetadataObject._From_without_properties(obj),\n        ]),\n      ),\n      aliases: new Map(\n        json.aliases.map((alias) => [\n          alias.name,\n          MetadataAlias._From_without_value(alias),\n        ]),\n      ),\n      arrays: new Map(\n        json.arrays.map((arr) => [\n          arr.name,\n          MetadataArrayType._From_without_value(arr),\n        ]),\n      ),\n      tuples: new Map(\n        json.tuples.map((tpl) => [\n          tpl.name,\n          MetadataTupleType._From_without_elements(tpl),\n        ]),\n      ),\n    };\n\n    // CONSTRUCT METADATA OF THEM\n    for (const obj of json.objects)\n      dictionary.objects\n        .get(obj.name)!\n        .properties.push(\n          ...obj.properties.map((prop) =>\n            MetadataProperty.from(prop, dictionary),\n          ),\n        );\n    for (const alias of json.aliases)\n      Writable(dictionary.aliases.get(alias.name)!).value = Metadata.from(\n        alias.value,\n        dictionary,\n      );\n    for (const array of json.arrays)\n      Writable(dictionary.arrays.get(array.name)!).value = Metadata.from(\n        array.value,\n        dictionary,\n      );\n    for (const tuple of json.tuples)\n      Writable(dictionary.tuples.get(tuple.name)!).elements =\n        tuple.elements.map((elem) => Metadata.from(elem, dictionary));\n\n    // FINALIZE\n    return new MetadataComponents({\n      aliases: [...dictionary.aliases.values()],\n      objects: [...dictionary.objects.values()],\n      arrays: [...dictionary.arrays.values()],\n      tuples: [...dictionary.tuples.values()],\n      dictionary,\n    });\n  }\n\n  public toJSON(): IMetadataComponents {\n    return {\n      aliases: this.aliases.map((alias) => alias.toJSON()),\n      objects: this.objects.map((object) => object.toJSON()),\n      arrays: this.arrays.map((array) => array.toJSON()),\n      tuples: this.tuples.map((tuple) => tuple.toJSON()),\n    };\n  }\n}\n"]}