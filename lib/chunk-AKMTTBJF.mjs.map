{"version":3,"sources":["../src/schemas/metadata/MetadataConstantValue.ts"],"sourcesContent":["import { ClassProperties } from \"../../typings/ClassProperties\";\n\nimport { IMetadataConstantValue } from \"./IMetadataConstantValue\";\nimport { IMetadataTypeTag } from \"./IMetadataTypeTag\";\n\nexport class MetadataConstantValue {\n  public readonly value: boolean | bigint | number | string;\n  public tags: IMetadataTypeTag[][] | undefined;\n  private name_?: string;\n\n  private constructor(props: ClassProperties<MetadataConstantValue>) {\n    this.value = props.value;\n    this.tags = props.tags;\n  }\n\n  public static create(\n    props: ClassProperties<MetadataConstantValue>,\n  ): MetadataConstantValue {\n    return new MetadataConstantValue(props);\n  }\n\n  public static from(json: IMetadataConstantValue<any>): MetadataConstantValue {\n    return MetadataConstantValue.create({\n      value: typeof json.value === \"bigint\" ? BigInt(json.value) : json.value,\n      tags: json.tags,\n    });\n  }\n\n  public getName(): string {\n    return (this.name_ ??= getName(this));\n  }\n\n  public toJSON(): IMetadataConstantValue<any> {\n    return {\n      value:\n        typeof this.value === \"bigint\" ? this.value.toString() : this.value,\n      tags: this.tags,\n    };\n  }\n}\n\nconst getName = (obj: MetadataConstantValue): string => {\n  const base: string =\n    typeof obj.value === \"string\"\n      ? JSON.stringify(obj.value)\n      : obj.value.toString();\n  if (!obj.tags?.length) return base;\n  const rows: string[] = obj.tags.map((row) => {\n    const str: string = row.map((t) => t.name).join(\" & \");\n    return row.length === 1 ? str : `(${str})`;\n  });\n  return `(${base} & (${rows.join(\" | \")}))`;\n};\n"],"mappings":";;;;;AAKO,IAAMA,wBAAN,MAAMA,uBAAAA;EAAb,OAAaA;;;EACKC;EACTC;EACCC;EAER,YAAoBC,OAA+C;AACjE,SAAKH,QAAQG,MAAMH;AACnB,SAAKC,OAAOE,MAAMF;EACpB;EAEA,OAAcG,OACZD,OACuB;AACvB,WAAO,IAAIJ,uBAAsBI,KAAAA;EACnC;EAEA,OAAcE,KAAKC,MAA0D;AAC3E,WAAOP,uBAAsBK,OAAO;MAClCJ,OAAO,OAAOM,KAAKN,UAAU,WAAWO,OAAOD,KAAKN,KAAK,IAAIM,KAAKN;MAClEC,MAAMK,KAAKL;IACb,CAAA;EACF;EAEOO,UAAkB;AACvB,WAAQ,KAAKN,UAAUM,QAAQ,IAAI;EACrC;EAEOC,SAAsC;AAC3C,WAAO;MACLT,OACE,OAAO,KAAKA,UAAU,WAAW,KAAKA,MAAMU,SAAQ,IAAK,KAAKV;MAChEC,MAAM,KAAKA;IACb;EACF;AACF;AAEA,IAAMO,UAAU,wBAACG,QAAAA;AACf,QAAMC,OACJ,OAAOD,IAAIX,UAAU,WACjBa,KAAKC,UAAUH,IAAIX,KAAK,IACxBW,IAAIX,MAAMU,SAAQ;AACxB,MAAI,CAACC,IAAIV,MAAMc,OAAQ,QAAOH;AAC9B,QAAMI,OAAiBL,IAAIV,KAAKgB,IAAI,CAACC,QAAAA;AACnC,UAAMC,MAAcD,IAAID,IAAI,CAACG,MAAMA,EAAEC,IAAI,EAAEC,KAAK,KAAA;AAChD,WAAOJ,IAAIH,WAAW,IAAII,MAAM,IAAIA,GAAAA;EACtC,CAAA;AACA,SAAO,IAAIP,IAAAA,OAAWI,KAAKM,KAAK,KAAA,CAAA;AAClC,GAXgB;","names":["MetadataConstantValue","value","tags","name_","props","create","from","json","BigInt","getName","toJSON","toString","obj","base","JSON","stringify","length","rows","map","row","str","t","name","join"]}