{"version":3,"sources":["../src/functional/$guard.ts"],"names":["$guard","method","exceptionable","props","factory","TypeGuardError","path","expected","value"],"mappings":";;;;;;;;AAKO,IAAMA,SACX,wBAACC,WACD,CACEC,eACAC,OACAC,YAAAA;AAEA,MAAIF,kBAAkB,KACpB,QAAOE,YAAY,CAACD,WAAU,IAAIE,eAAeF,MAAAA,IAAS;IACxDF;IACAK,MAAMH,MAAMG;IACZC,UAAUJ,MAAMI;IAChBC,OAAOL,MAAMK;EACf,CAAA;AACF,SAAO;AACT,GAdA","sourcesContent":["import { TypeGuardError } from \"../TypeGuardError\";\n\n/**\n * @internal\n */\nexport const $guard =\n  (method: string) =>\n  (\n    exceptionable: boolean,\n    props: Omit<TypeGuardError.IProps, \"method\">,\n    factory?: (props: TypeGuardError.IProps) => Error,\n  ): boolean => {\n    if (exceptionable === true)\n      throw (factory ?? ((props) => new TypeGuardError(props)))({\n        method,\n        path: props.path,\n        expected: props.expected,\n        value: props.value,\n      });\n    return false;\n  };\n"]}