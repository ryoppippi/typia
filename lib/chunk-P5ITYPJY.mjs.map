{"version":3,"sources":["../src/functional/$string.ts"],"sourcesContent":["/**\n * In the past, name of `typia` was `typescript-json`, and supported\n * JSON serialization by wrapping `fast-json-stringify. `typescript-json` was\n * a helper library of `fast-json-stringify`, which can skip manual JSON schema\n * definition just by putting pure TypeScript type.\n *\n * This `$string` function is a part of `fast-json-stringify` at that time, and\n * still being used in `typia` for the string serialization.\n *\n * @internal\n * @reference https://github.com/fastify/fast-json-stringify/blob/master/lib/serializer.js\n * @blog https://dev.to/samchon/good-bye-typescript-is-ancestor-of-typia-20000x-faster-validator-49fi\n */\nexport const $string = (str: string): string => {\n  const len = str.length;\n  let result = \"\";\n  let last = -1;\n  let point = 255;\n\n  // eslint-disable-next-line\n  for (var i = 0; i < len; i++) {\n    point = str.charCodeAt(i);\n    if (point < 32) {\n      return JSON.stringify(str);\n    }\n    if (point >= 0xd800 && point <= 0xdfff) {\n      // The current character is a surrogate.\n      return JSON.stringify(str);\n    }\n    if (\n      point === 0x22 || // '\"'\n      point === 0x5c // '\\'\n    ) {\n      last === -1 && (last = 0);\n      result += str.slice(last, i) + \"\\\\\";\n      last = i;\n    }\n  }\n\n  return (\n    (last === -1 && '\"' + str + '\"') || '\"' + result + str.slice(last) + '\"'\n  );\n};\n"],"mappings":";;;;;AAaO,IAAMA,UAAU,wBAACC,QAAAA;AACtB,QAAMC,MAAMD,IAAIE;AAChB,MAAIC,SAAS;AACb,MAAIC,OAAO;AACX,MAAIC,QAAQ;AAGZ,WAASC,IAAI,GAAGA,IAAIL,KAAKK,KAAK;AAC5BD,YAAQL,IAAIO,WAAWD,CAAAA;AACvB,QAAID,QAAQ,IAAI;AACd,aAAOG,KAAKC,UAAUT,GAAAA;IACxB;AACA,QAAIK,SAAS,SAAUA,SAAS,OAAQ;AAEtC,aAAOG,KAAKC,UAAUT,GAAAA;IACxB;AACA,QACEK,UAAU;IACVA,UAAU,IACV;AACAD,eAAS,OAAOA,OAAO;AACvBD,gBAAUH,IAAIU,MAAMN,MAAME,CAAAA,IAAK;AAC/BF,aAAOE;IACT;EACF;AAEA,SACGF,SAAS,MAAM,MAAMJ,MAAM,OAAQ,MAAMG,SAASH,IAAIU,MAAMN,IAAAA,IAAQ;AAEzE,GA7BuB;","names":["$string","str","len","length","result","last","point","i","charCodeAt","JSON","stringify","slice"]}