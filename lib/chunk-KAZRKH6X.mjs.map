{"version":3,"sources":["../src/programmers/internal/application_v31_alias.ts","../src/programmers/internal/application_v31_schema.ts","../src/programmers/internal/application_v31_object.ts"],"sourcesContent":["import { OpenApi } from \"@samchon/openapi\";\n\nimport { CommentFactory } from \"../../factories/CommentFactory\";\n\nimport { IJsDocTagInfo } from \"../../schemas/metadata/IJsDocTagInfo\";\nimport { MetadataAlias } from \"../../schemas/metadata/MetadataAlias\";\n\nimport { application_v31_object } from \"./application_v31_object\";\nimport { application_v31_schema } from \"./application_v31_schema\";\n\n/**\n * @internal\n */\nexport const application_v31_alias =\n  <BlockNever extends boolean>(blockNever: BlockNever) =>\n  (components: OpenApi.IComponents) =>\n  (alias: MetadataAlias): OpenApi.IJsonSchema.IReference => {\n    if (alias.value.size() === 1 && alias.value.objects.length === 1)\n      return application_v31_object(components)(\n        alias.value.objects[0]!,\n      ) as OpenApi.IJsonSchema.IReference;\n\n    const $ref: string = `#/components/schemas/${alias.name}`;\n    if (components.schemas?.[alias.name] === undefined) {\n      // TEMPORARY ASSIGNMENT\n      components.schemas ??= {};\n      components.schemas[alias.name] = {};\n\n      // GENERATE SCHEMA\n      const schema: OpenApi.IJsonSchema | null = application_v31_schema(\n        blockNever,\n      )(components)({\n        deprecated:\n          alias.jsDocTags.some((tag) => tag.name === \"deprecated\") || undefined,\n        title: (() => {\n          const info: IJsDocTagInfo | undefined = alias.jsDocTags.find(\n            (tag) => tag.name === \"title\",\n          );\n          return info?.text?.length\n            ? CommentFactory.merge(info.text)\n            : undefined;\n        })(),\n        description: alias.description ?? undefined,\n      })(alias.value);\n      if (schema !== null)\n        Object.assign(components.schemas[alias.name]!, schema);\n    }\n    return { $ref };\n  };\n","import { OpenApi } from \"@samchon/openapi\";\n\nimport { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataAtomic } from \"../../schemas/metadata/MetadataAtomic\";\n\nimport { AtomicPredicator } from \"../helpers/AtomicPredicator\";\nimport { application_array } from \"./application_array\";\nimport { application_boolean } from \"./application_boolean\";\nimport { application_escaped } from \"./application_escaped\";\nimport { application_number } from \"./application_number\";\nimport { application_string } from \"./application_string\";\nimport { application_templates } from \"./application_templates\";\nimport { application_v31_alias } from \"./application_v31_alias\";\nimport { application_v31_constant } from \"./application_v31_constant\";\nimport { application_v31_native } from \"./application_v31_native\";\nimport { application_v31_object } from \"./application_v31_object\";\nimport { application_v31_tuple } from \"./application_v31_tuple\";\n\n/**\n * @internal\n */\nexport const application_v31_schema =\n  <BlockNever extends boolean>(blockNever: BlockNever) =>\n  (components: OpenApi.IComponents) =>\n  (attribute: OpenApi.IJsonSchema.__IAttribute) =>\n  (\n    meta: Metadata,\n  ): BlockNever extends true\n    ? OpenApi.IJsonSchema | null\n    : OpenApi.IJsonSchema => {\n    if (meta.any === true)\n      return {\n        ...attribute,\n        type: undefined,\n      };\n\n    //----\n    // GATHER UNION SCHEMAS\n    //----\n    const union: OpenApi.IJsonSchema[] = [];\n    const insert = (schema: OpenApi.IJsonSchema) => union.push(schema);\n\n    // NULLABLE\n    if (meta.nullable === true)\n      insert({\n        type: \"null\",\n      });\n\n    // toJSON() METHOD\n    if (meta.escaped !== null)\n      application_escaped(application_v31_schema(false)(components)({}))(\n        meta.escaped,\n      ).forEach(insert);\n\n    // ATOMIC TYPES\n    if (meta.templates.length && AtomicPredicator.template(meta))\n      insert(application_templates(meta));\n    for (const constant of meta.constants)\n      if (constant.type === \"bigint\") throw new TypeError(NO_BIGINT);\n      else if (AtomicPredicator.constant(meta)(constant.type) === false)\n        continue;\n      else application_v31_constant(constant).map(insert);\n    for (const a of meta.atomics)\n      if (a.type === \"bigint\") throw new TypeError(NO_BIGINT);\n      else if (a.type === \"boolean\") application_boolean(a).forEach(insert);\n      else if (a.type === \"number\") application_number(a).forEach(insert);\n      else if (a.type === \"string\") application_string(a).forEach(insert);\n\n    // ARRAY\n    for (const array of meta.arrays)\n      application_array(application_v31_schema(false)(components)({}))(\n        array,\n      ).forEach(insert);\n\n    // TUPLE\n    for (const tuple of meta.tuples)\n      insert(\n        application_v31_tuple(application_v31_schema(false)(components)({}))(\n          tuple,\n        ),\n      );\n\n    // NATIVES\n    for (const native of meta.natives)\n      if (AtomicPredicator.native(native)) {\n        const type: string = native.toLowerCase();\n        if (meta.atomics.some((a) => a.type === type)) continue;\n        else if (type === \"bigint\") throw new TypeError(NO_BIGINT);\n        else if (type === \"boolean\")\n          insert(\n            application_boolean(\n              MetadataAtomic.create({\n                type: \"boolean\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n        else if (type === \"number\")\n          insert(\n            application_number(\n              MetadataAtomic.create({\n                type: \"number\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n        else if (type === \"string\")\n          insert(\n            application_string(\n              MetadataAtomic.create({\n                type: \"string\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n      } else insert(application_v31_native(components)(native));\n    if (meta.sets.length) insert(application_v31_native(components)(`Set`));\n    if (meta.maps.length) insert(application_v31_native(components)(`Map`));\n\n    // OBJECT\n    for (const obj of meta.objects)\n      insert(application_v31_object(components)(obj));\n\n    // ALIASES\n    for (const alias of meta.aliases)\n      insert(application_v31_alias(blockNever)(components)(alias));\n\n    //----\n    // RETURNS\n    //----\n    if (union.length === 0 && blockNever === true) return null!;\n    const schema: OpenApi.IJsonSchema =\n      union.length === 0\n        ? { type: undefined }\n        : union.length === 1\n          ? union[0]!\n          : { oneOf: union };\n    return {\n      ...schema,\n      ...attribute,\n      title: attribute.title ?? schema.title,\n      description: attribute.description ?? schema.description,\n      deprecated: attribute.deprecated ?? schema.deprecated,\n    };\n  };\n\n/**\n * @internal\n */\nconst NO_BIGINT = \"Error on typia.application(): does not allow bigint type.\";\n","import { OpenApi, OpenApiV3 } from \"@samchon/openapi\";\n\nimport { CommentFactory } from \"../../factories/CommentFactory\";\n\nimport { IJsDocTagInfo } from \"../../schemas/metadata/IJsDocTagInfo\";\nimport { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataObject } from \"../../schemas/metadata/MetadataObject\";\n\nimport { PatternUtil } from \"../../utils/PatternUtil\";\n\nimport { application_v31_schema } from \"./application_v31_schema\";\nimport { metadata_to_pattern } from \"./metadata_to_pattern\";\n\n/**\n * @internal\n */\nexport const application_v31_object =\n  (components: OpenApi.IComponents) =>\n  (\n    obj: MetadataObject,\n  ): OpenApi.IJsonSchema.IReference | OpenApi.IJsonSchema.IObject => {\n    if (obj._Is_literal() === true)\n      return create_object_schema(components)(obj);\n\n    const key: string = obj.name;\n    const $ref: string = `#/components/schemas/${key}`;\n    if (components.schemas?.[key] !== undefined) return { $ref };\n\n    const object: OpenApiV3.IJsonSchema = {};\n    components.schemas ??= {};\n    components.schemas[key] = object;\n    Object.assign(object, create_object_schema(components)(obj));\n    return { $ref };\n  };\n\n/**\n * @internal\n */\nconst create_object_schema =\n  (components: OpenApi.IComponents) =>\n  (obj: MetadataObject): OpenApi.IJsonSchema.IObject => {\n    // ITERATE PROPERTIES\n    const properties: Record<string, any> = {};\n    const extraMeta: ISuperfluous = {\n      patternProperties: {},\n      additionalProperties: undefined,\n    };\n    const required: string[] = [];\n\n    for (const property of obj.properties) {\n      if (\n        // FUNCTIONAL TYPE\n        property.value.functional === true &&\n        property.value.nullable === false &&\n        property.value.isRequired() === true &&\n        property.value.size() === 0\n      )\n        continue;\n      else if (property.jsDocTags.find((tag) => tag.name === \"hidden\"))\n        continue; // THE HIDDEN TAG\n\n      const key: string | null = property.key.getSoleLiteral();\n      const schema: OpenApi.IJsonSchema | null = application_v31_schema(true)(\n        components,\n      )({\n        deprecated:\n          property.jsDocTags.some((tag) => tag.name === \"deprecated\") ||\n          undefined,\n        title: (() => {\n          const info: IJsDocTagInfo | undefined = property.jsDocTags.find(\n            (tag) => tag.name === \"title\",\n          );\n          if (info?.text?.length) return CommentFactory.merge(info.text);\n          else if (!property.description?.length) return undefined;\n\n          const index: number = property.description.indexOf(\"\\n\");\n          const top: string = (\n            index === -1\n              ? property.description\n              : property.description.substring(0, index)\n          ).trim();\n          return top.endsWith(\".\")\n            ? top.substring(0, top.length - 1)\n            : undefined;\n        })(),\n        description: property.description ?? undefined,\n      })(property.value);\n\n      if (schema === null) continue;\n      if (key !== null) {\n        properties[key] = schema;\n        if (property.value.isRequired() === true) required.push(key);\n      } else {\n        const pattern: string = metadata_to_pattern(true)(property.key);\n        if (pattern === PatternUtil.STRING)\n          extraMeta.additionalProperties = [property.value, schema];\n        else extraMeta.patternProperties[pattern] = [property.value, schema];\n      }\n    }\n\n    return {\n      type: \"object\",\n      properties,\n      required: required.length ? required : undefined,\n      title: (() => {\n        const info: IJsDocTagInfo | undefined = obj.jsDocTags.find(\n          (tag) => tag.name === \"title\",\n        );\n        return info?.text?.length ? CommentFactory.merge(info.text) : undefined;\n      })(),\n      description: obj.description,\n      additionalProperties: join(components)(extraMeta),\n    };\n  };\n\n/**\n * @internal\n */\nconst join =\n  (components: OpenApi.IComponents) =>\n  (extra: ISuperfluous): OpenApi.IJsonSchema | undefined => {\n    // LIST UP METADATA\n    const elements: [Metadata, OpenApi.IJsonSchema][] = Object.values(\n      extra.patternProperties || {},\n    );\n    if (extra.additionalProperties) elements.push(extra.additionalProperties);\n\n    // SHORT RETURN\n    if (elements.length === 0) return undefined;\n    else if (elements.length === 1) return elements[0]![1]!;\n\n    // MERGE METADATA AND GENERATE VULNERABLE SCHEMA\n    const meta: Metadata = elements\n      .map((tuple) => tuple[0])\n      .reduce((x, y) => Metadata.merge(x, y));\n    return application_v31_schema(true)(components)({})(meta) ?? undefined;\n  };\n\n/**\n * @internal\n */\ninterface ISuperfluous {\n  additionalProperties?: undefined | [Metadata, OpenApi.IJsonSchema];\n  patternProperties: Record<string, [Metadata, OpenApi.IJsonSchema]>;\n}\n"],"mappings":"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","names":["application_v31_alias","blockNever","components","alias","value","size","objects","length","application_v31_object","$ref","name","schemas","undefined","schema","application_v31_schema","deprecated","jsDocTags","some","tag","title","info","find","text","CommentFactory","merge","description","Object","assign","application_v31_schema","blockNever","components","attribute","meta","any","type","undefined","union","insert","schema","push","nullable","escaped","application_escaped","forEach","templates","length","AtomicPredicator","template","application_templates","constant","constants","TypeError","NO_BIGINT","application_v31_constant","map","a","atomics","application_boolean","application_number","application_string","array","arrays","application_array","tuple","tuples","application_v31_tuple","native","natives","toLowerCase","some","MetadataAtomic","create","tags","application_v31_native","sets","maps","obj","objects","application_v31_object","alias","aliases","application_v31_alias","oneOf","title","description","deprecated","application_v31_object","components","obj","_Is_literal","create_object_schema","key","name","$ref","schemas","undefined","object","Object","assign","properties","extraMeta","patternProperties","additionalProperties","required","property","value","functional","nullable","isRequired","size","jsDocTags","find","tag","getSoleLiteral","schema","application_v31_schema","deprecated","some","title","info","text","length","CommentFactory","merge","description","index","indexOf","top","substring","trim","endsWith","push","pattern","metadata_to_pattern","PatternUtil","STRING","type","join","extra","elements","values","meta","map","tuple","reduce","x","y","Metadata"]}