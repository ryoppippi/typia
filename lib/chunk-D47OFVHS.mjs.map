{"version":3,"sources":["../src/programmers/internal/wrap_metadata_rest_tuple.ts"],"sourcesContent":["import { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataArray } from \"../../schemas/metadata/MetadataArray\";\nimport { MetadataArrayType } from \"../../schemas/metadata/MetadataArrayType\";\n\nexport const wrap_metadata_rest_tuple = (rest: Metadata) => {\n  const wrapper: Metadata = Metadata.initialize();\n  wrapper.arrays.push(\n    MetadataArray.create({\n      type: MetadataArrayType.create({\n        name: `...${rest.getName()}`,\n        value: rest,\n        nullables: [],\n        recursive: false,\n        index: null,\n      }),\n      tags: [],\n    }),\n  );\n  return wrapper;\n};\n"],"mappings":";;;;;;;;;;;;;;AAIO,IAAMA,2BAA2B,wBAACC,SAAAA;AACvC,QAAMC,UAAoBC,SAASC,WAAU;AAC7CF,UAAQG,OAAOC,KACbC,cAAcC,OAAO;IACnBC,MAAMC,kBAAkBF,OAAO;MAC7BG,MAAM,MAAMV,KAAKW,QAAO,CAAA;MACxBC,OAAOZ;MACPa,WAAW,CAAA;MACXC,WAAW;MACXC,OAAO;IACT,CAAA;IACAC,MAAM,CAAA;EACR,CAAA,CAAA;AAEF,SAAOf;AACT,GAfwC;","names":["wrap_metadata_rest_tuple","rest","wrapper","Metadata","initialize","arrays","push","MetadataArray","create","type","MetadataArrayType","name","getName","value","nullables","recursive","index","tags"]}