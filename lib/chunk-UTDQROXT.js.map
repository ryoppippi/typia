{"version":3,"sources":["../src/functional/$HeadersReader/$HeadersReader.ts"],"names":["boolean","value","undefined","bigint","toBigint","number","toNumber","string","str","BigInt","Number","isNaN"],"mappings":";;;;;;AAAA;;;;;;;AAAO,IAAMA,UAAU,wBAACC,UACtBA,UAAUC,SACND,UAAU,SACR,OACAA,UAAU,UACR,QACAA,QACJC,QAPiB;AAQhB,IAAMC,SAAS,wBAACF,UACrBA,UAAUC,SAAYE,SAASH,KAAAA,IAASC,QADpB;AAEf,IAAMG,SAAS,wBAACJ,UACrBA,UAAUC,SAAYI,SAASL,KAAAA,IAASC,QADpB;AAEf,IAAMK,SAAS,wBAACN,UAA8BA,OAA/B;AAEtB,IAAMG,WAAW,wBAACI,QAAAA;AAChB,MAAI;AACF,WAAOC,OAAOD,GAAAA;EAChB,QAAQ;AACN,WAAOA;EACT;AACF,GANiB;AAQjB,IAAMF,WAAW,wBAACE,QAAAA;AAChB,QAAMP,QAAgBS,OAAOF,GAAAA;AAC7B,SAAOG,MAAMV,KAAAA,IAASO,MAAMP;AAC9B,GAHiB","sourcesContent":["export const boolean = (value: string | undefined) =>\n  value !== undefined\n    ? value === \"true\"\n      ? true\n      : value === \"false\"\n        ? false\n        : value\n    : undefined;\nexport const bigint = (value: string | undefined) =>\n  value !== undefined ? toBigint(value) : undefined;\nexport const number = (value: string | undefined) =>\n  value !== undefined ? toNumber(value) : undefined;\nexport const string = (value: string | undefined) => value;\n\nconst toBigint = (str: string): bigint | string => {\n  try {\n    return BigInt(str);\n  } catch {\n    return str;\n  }\n};\n\nconst toNumber = (str: string): number | string => {\n  const value: number = Number(str);\n  return isNaN(value) ? str : value;\n};\n"]}