{"version":3,"sources":["../src/programmers/internal/application_v30_alias.ts","../src/programmers/internal/application_v30_tuple.ts","../src/programmers/internal/application_v30_schema.ts","../src/programmers/internal/application_v30_object.ts"],"names":["application_v30_alias","blockNever","components","alias","nullable","value","size","objects","length","application_v30_object","key","name","$ref","schemas","undefined","schema","application_v30_schema","deprecated","jsDocTags","some","tag","title","info","find","text","CommentFactory","merge","description","Object","assign","application_v30_tuple","tuple","attribute","type","items","recursive","elements","reduce","x","y","Metadata","rest","initialize","minItems","at","filter","optional","maxItems","meta","any","empty","union","insert","push","escaped","application_escaped","forEach","templates","AtomicPredicator","template","application_templates","constant","constants","TypeError","NO_BIGINT","application_v30_constant","a","atomics","application_boolean","application_number","application_string","array","arrays","application_array","tuples","native","natives","toLowerCase","MetadataAtomic","create","tags","application_v30_native","sets","maps","obj","aliases","oneOf","_Is_literal","create_object_schema","object","properties","extraMeta","patternProperties","additionalProperties","required","property","functional","isRequired","getSoleLiteral","index","indexOf","top","substring","trim","endsWith","pattern","metadata_to_pattern","PatternUtil","STRING","join","extra","values","map"],"mappings":"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","sourcesContent":["import { OpenApiV3 } from \"@samchon/openapi\";\n\nimport { CommentFactory } from \"../../factories/CommentFactory\";\n\nimport { IJsDocTagInfo } from \"../../schemas/metadata/IJsDocTagInfo\";\nimport { MetadataAlias } from \"../../schemas/metadata/MetadataAlias\";\n\nimport { application_v30_object } from \"./application_v30_object\";\nimport { application_v30_schema } from \"./application_v30_schema\";\n\n/**\n * @internal\n */\nexport const application_v30_alias =\n  <BlockNever extends boolean>(blockNever: BlockNever) =>\n  (components: OpenApiV3.IComponents) =>\n  (alias: MetadataAlias) =>\n  (nullable: boolean): OpenApiV3.IJsonSchema.IReference => {\n    if (alias.value.size() === 1 && alias.value.objects.length === 1)\n      return application_v30_object(components)(alias.value.objects[0]!)(\n        nullable,\n      ) as OpenApiV3.IJsonSchema.IReference;\n\n    const key: string = `${alias.name}${nullable ? \".Nullable\" : \"\"}`;\n    const $ref: string = `#/components/schemas/${key}`;\n\n    if (components.schemas?.[key] === undefined) {\n      // TEMPORARY ASSIGNMENT\n      components.schemas ??= {};\n      components.schemas[key] = {};\n\n      // GENERATE SCHEMA\n      const schema: OpenApiV3.IJsonSchema | null = application_v30_schema(\n        blockNever,\n      )(components)({\n        deprecated:\n          alias.jsDocTags.some((tag) => tag.name === \"deprecated\") || undefined,\n        title: (() => {\n          const info: IJsDocTagInfo | undefined = alias.jsDocTags.find(\n            (tag) => tag.name === \"title\",\n          );\n          return info?.text?.length\n            ? CommentFactory.merge(info.text)\n            : undefined;\n        })(),\n        description: alias.description ?? undefined,\n      })(alias.value);\n      if (schema !== null) Object.assign(components.schemas[key]!, schema);\n    }\n    return { $ref };\n  };\n","import { OpenApiV3 } from \"@samchon/openapi\";\n\nimport { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataTuple } from \"../../schemas/metadata/MetadataTuple\";\n\nimport { application_v30_schema } from \"./application_v30_schema\";\n\n/**\n * @internal\n */\nexport const application_v30_tuple =\n  (components: OpenApiV3.IComponents) =>\n  (tuple: MetadataTuple) =>\n  (\n    attribute: OpenApiV3.IJsonSchema.__IAttribute,\n  ): OpenApiV3.IJsonSchema.IArray => ({\n    ...attribute,\n    type: \"array\",\n    items: application_v30_schema(false)(components)(\n      tuple.type.recursive ? {} : attribute,\n    )(\n      tuple.type.elements.reduce(\n        (x, y) => Metadata.merge(x.rest ?? x, y.rest ?? y),\n        Metadata.initialize(),\n      ),\n    ),\n    minItems: !!tuple.type.elements.at(-1)?.rest\n      ? tuple.type.elements.length - 1\n      : tuple.type.elements.filter((x) => !x.optional).length,\n    maxItems: !!tuple.type.elements.at(-1)?.rest\n      ? undefined!\n      : tuple.type.elements.length,\n  });\n","import { OpenApiV3 } from \"@samchon/openapi\";\n\nimport { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataAtomic } from \"../../schemas/metadata/MetadataAtomic\";\n\nimport { AtomicPredicator } from \"../helpers/AtomicPredicator\";\nimport { application_array } from \"./application_array\";\nimport { application_boolean } from \"./application_boolean\";\nimport { application_escaped } from \"./application_escaped\";\nimport { application_number } from \"./application_number\";\nimport { application_string } from \"./application_string\";\nimport { application_templates } from \"./application_templates\";\nimport { application_v30_alias } from \"./application_v30_alias\";\nimport { application_v30_constant } from \"./application_v30_constant\";\nimport { application_v30_native } from \"./application_v30_native\";\nimport { application_v30_object } from \"./application_v30_object\";\nimport { application_v30_tuple } from \"./application_v30_tuple\";\n\n/**\n * @internal\n */\nexport const application_v30_schema =\n  <BlockNever extends boolean>(blockNever: BlockNever) =>\n  (components: OpenApiV3.IComponents) =>\n  (attribute: OpenApiV3.IJsonSchema.__IAttribute) =>\n  (\n    meta: Metadata,\n  ): BlockNever extends true\n    ? OpenApiV3.IJsonSchema | null\n    : OpenApiV3.IJsonSchema => {\n    // VULNERABLE CASE\n    if (meta.any === true)\n      return {\n        ...attribute,\n        type: undefined,\n      };\n    else if (meta.nullable && meta.empty())\n      return { type: \"null\", ...attribute };\n\n    //----\n    // GATHER UNION SCHEMAS\n    //----\n    const union: OpenApiV3.IJsonSchema[] = [];\n    const insert = meta.nullable\n      ? (schema: OpenApiV3.IJsonSchema) =>\n          union.push({\n            ...schema,\n            nullable: (schema as OpenApiV3.IJsonSchema.__ISignificant<any>).type\n              ? true\n              : undefined,\n          } as OpenApiV3.IJsonSchema)\n      : (schema: OpenApiV3.IJsonSchema) => union.push(schema);\n\n    // toJSON() METHOD\n    if (meta.escaped !== null)\n      application_escaped<\"3.0\">(application_v30_schema(false)(components)({}))(\n        meta.escaped,\n      ).forEach(insert);\n\n    // ATOMIC TYPES\n    if (meta.templates.length && AtomicPredicator.template(meta))\n      insert(application_templates(meta));\n    for (const constant of meta.constants)\n      if (constant.type === \"bigint\") throw new TypeError(NO_BIGINT);\n      else if (AtomicPredicator.constant(meta)(constant.type) === false)\n        continue;\n      else insert(application_v30_constant(constant));\n    for (const a of meta.atomics)\n      if (a.type === \"bigint\") throw new TypeError(NO_BIGINT);\n      else if (a.type === \"boolean\") application_boolean(a).forEach(insert);\n      else if (a.type === \"number\") application_number(a).forEach(insert);\n      else if (a.type === \"string\") application_string(a).forEach(insert);\n\n    // ARRAY\n    for (const array of meta.arrays)\n      application_array<\"3.0\">(application_v30_schema(false)(components)({}))(\n        array,\n      ).forEach(insert);\n\n    // TUPLE\n    for (const tuple of meta.tuples)\n      insert(application_v30_tuple(components)(tuple)(attribute));\n\n    // NATIVES\n    for (const native of meta.natives)\n      if (AtomicPredicator.native(native)) {\n        const type: string = native.toLowerCase();\n        if (meta.atomics.some((a) => a.type === type)) continue;\n        else if (type === \"bigint\") throw new TypeError(NO_BIGINT);\n        else if (type === \"boolean\")\n          insert(\n            application_boolean(\n              MetadataAtomic.create({\n                type: \"boolean\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n        else if (type === \"number\")\n          insert(\n            application_number(\n              MetadataAtomic.create({\n                type: \"number\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n        else if (type === \"string\")\n          insert(\n            application_string(\n              MetadataAtomic.create({\n                type: \"string\",\n                tags: [],\n              }),\n            )[0]!,\n          );\n      } else insert(application_v30_native(components)(native)(meta.nullable));\n    if (meta.sets.length)\n      insert(application_v30_native(components)(`Set`)(meta.nullable));\n    if (meta.maps.length)\n      insert(application_v30_native(components)(`Map`)(meta.nullable));\n\n    // OBJECT\n    for (const obj of meta.objects)\n      insert(application_v30_object(components)(obj)(meta.nullable));\n\n    // ALIASES\n    for (const alias of meta.aliases)\n      insert(\n        application_v30_alias(blockNever)(components)(alias)(meta.nullable),\n      );\n\n    //----\n    // RETURNS\n    //----\n    if (union.length === 0 && blockNever === true) return null!;\n    const schema: OpenApiV3.IJsonSchema =\n      union.length === 0\n        ? { type: undefined }\n        : union.length === 1\n          ? union[0]!\n          : { oneOf: union };\n    return {\n      ...schema,\n      ...attribute,\n      title: attribute.title ?? schema.title,\n      description: attribute.description ?? schema.description,\n      deprecated: attribute.deprecated ?? schema.deprecated,\n    };\n  };\n\n/**\n * @internal\n */\nconst NO_BIGINT = \"Error on typia.application(): does not allow bigint type.\";\n","import { OpenApiV3 } from \"@samchon/openapi\";\n\nimport { CommentFactory } from \"../../factories/CommentFactory\";\n\nimport { IJsDocTagInfo } from \"../../schemas/metadata/IJsDocTagInfo\";\nimport { Metadata } from \"../../schemas/metadata/Metadata\";\nimport { MetadataObject } from \"../../schemas/metadata/MetadataObject\";\n\nimport { PatternUtil } from \"../../utils/PatternUtil\";\n\nimport { application_v30_schema } from \"./application_v30_schema\";\nimport { metadata_to_pattern } from \"./metadata_to_pattern\";\n\n/**\n * @internal\n */\nexport const application_v30_object =\n  (components: OpenApiV3.IComponents) =>\n  (obj: MetadataObject) =>\n  (\n    nullable: boolean,\n  ): OpenApiV3.IJsonSchema.IReference | OpenApiV3.IJsonSchema.IObject => {\n    if (obj._Is_literal() === true)\n      return create_object_schema(components)(obj)(nullable);\n\n    const key: string = `${obj.name}${nullable ? \".Nullable\" : \"\"}`;\n    const $ref: string = `#/components/schemas/${key}`;\n    if (components.schemas?.[key] !== undefined) return { $ref };\n\n    const object: OpenApiV3.IJsonSchema = {};\n    components.schemas ??= {};\n    components.schemas[key] = object;\n    Object.assign(object, create_object_schema(components)(obj)(nullable));\n    return { $ref };\n  };\n\n/**\n * @internal\n */\nconst create_object_schema =\n  (components: OpenApiV3.IComponents) =>\n  (obj: MetadataObject) =>\n  (nullable: boolean): OpenApiV3.IJsonSchema.IObject => {\n    // ITERATE PROPERTIES\n    const properties: Record<string, any> = {};\n    const extraMeta: ISuperfluous = {\n      patternProperties: {},\n      additionalProperties: undefined,\n    };\n    const required: string[] = [];\n\n    for (const property of obj.properties) {\n      if (\n        // FUNCTIONAL TYPE\n        property.value.functional === true &&\n        property.value.nullable === false &&\n        property.value.isRequired() === true &&\n        property.value.size() === 0\n      )\n        continue;\n      else if (property.jsDocTags.find((tag) => tag.name === \"hidden\"))\n        continue; // THE HIDDEN TAG\n\n      const key: string | null = property.key.getSoleLiteral();\n      const schema: OpenApiV3.IJsonSchema | null = application_v30_schema(true)(\n        components,\n      )({\n        deprecated:\n          property.jsDocTags.some((tag) => tag.name === \"deprecated\") ||\n          undefined,\n        title: (() => {\n          const info: IJsDocTagInfo | undefined = property.jsDocTags.find(\n            (tag) => tag.name === \"title\",\n          );\n          if (info?.text?.length) return CommentFactory.merge(info.text);\n          else if (!property.description?.length) return undefined;\n\n          const index: number = property.description.indexOf(\"\\n\");\n          const top: string = (\n            index === -1\n              ? property.description\n              : property.description.substring(0, index)\n          ).trim();\n          return top.endsWith(\".\")\n            ? top.substring(0, top.length - 1)\n            : undefined;\n        })(),\n        description: property.description ?? undefined,\n      })(property.value);\n\n      if (schema === null) continue;\n      if (key !== null) {\n        properties[key] = schema;\n        if (property.value.isRequired() === true) required.push(key);\n      } else {\n        const pattern: string = metadata_to_pattern(true)(property.key);\n        if (pattern === PatternUtil.STRING)\n          extraMeta.additionalProperties = [property.value, schema];\n        else extraMeta.patternProperties[pattern] = [property.value, schema];\n      }\n    }\n\n    return {\n      type: \"object\",\n      properties,\n      nullable,\n      required: required.length ? required : undefined,\n      title: (() => {\n        const info: IJsDocTagInfo | undefined = obj.jsDocTags.find(\n          (tag) => tag.name === \"title\",\n        );\n        return info?.text?.length ? CommentFactory.merge(info.text) : undefined;\n      })(),\n      description: obj.description,\n      additionalProperties: join(components)(extraMeta),\n    };\n  };\n\n/**\n * @internal\n */\nconst join =\n  (components: OpenApiV3.IComponents) =>\n  (extra: ISuperfluous): OpenApiV3.IJsonSchema | undefined => {\n    // LIST UP METADATA\n    const elements: [Metadata, OpenApiV3.IJsonSchema][] = Object.values(\n      extra.patternProperties || {},\n    );\n    if (extra.additionalProperties) elements.push(extra.additionalProperties);\n\n    // SHORT RETURN\n    if (elements.length === 0) return undefined;\n    else if (elements.length === 1) return elements[0]![1]!;\n\n    // MERGE METADATA AND GENERATE VULNERABLE SCHEMA\n    const meta: Metadata = elements\n      .map((tuple) => tuple[0])\n      .reduce((x, y) => Metadata.merge(x, y));\n    return application_v30_schema(true)(components)({})(meta) ?? undefined;\n  };\n\n/**\n * @internal\n */\ninterface ISuperfluous {\n  additionalProperties?: undefined | [Metadata, OpenApiV3.IJsonSchema];\n  patternProperties: Record<string, [Metadata, OpenApiV3.IJsonSchema]>;\n}\n"]}