{"version":3,"sources":["../src/transformers/features/RandomTransformer.ts"],"sourcesContent":["import ts from \"typescript\";\n\nimport { RandomProgrammer } from \"../../programmers/RandomProgrammer\";\n\nimport { IProject } from \"../IProject\";\nimport { TransformerError } from \"../TransformerError\";\n\nexport namespace RandomTransformer {\n  export const transform =\n    (project: IProject) =>\n    (modulo: ts.LeftHandSideExpression) =>\n    (expression: ts.CallExpression): ts.Expression => {\n      // CHECK GENERIC ARGUMENT EXISTENCE\n      if (!expression.typeArguments?.[0])\n        throw new TransformerError({\n          code: `typia.${modulo.getText()}`,\n          message: \"generic argument is not specified.\",\n        });\n\n      // GET TYPE INFO\n      const node: ts.TypeNode = expression.typeArguments[0];\n      const type: ts.Type = project.checker.getTypeFromTypeNode(node);\n\n      if (type.isTypeParameter())\n        throw new TransformerError({\n          code: `typia.${modulo.getText()}`,\n          message: \"non-specified generic argument.\",\n        });\n\n      // DO TRANSFORM\n      return ts.factory.createCallExpression(\n        RandomProgrammer.write({\n          ...project,\n          options: {\n            ...project.options,\n            functional: false,\n            numeric: false,\n          },\n        })(modulo)()(type, node.getFullText().trim()),\n        undefined,\n        expression.arguments.length ? [expression.arguments[0]!] : undefined,\n      );\n    };\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,QAAQ;;UAOEC,oBAAAA;qBACFC,YACX,CAACC,YACD,CAACC,WACD,CAACC,eAAAA;AAEC,QAAI,CAACA,WAAWC,gBAAgB,CAAA,EAC9B,OAAM,IAAIC,iBAAiB;MACzBC,MAAM,SAASJ,OAAOK,QAAO,CAAA;MAC7BC,SAAS;IACX,CAAA;AAGF,UAAMC,OAAoBN,WAAWC,cAAc,CAAA;AACnD,UAAMM,OAAgBT,QAAQU,QAAQC,oBAAoBH,IAAAA;AAE1D,QAAIC,KAAKG,gBAAe,EACtB,OAAM,IAAIR,iBAAiB;MACzBC,MAAM,SAASJ,OAAOK,QAAO,CAAA;MAC7BC,SAAS;IACX,CAAA;AAGF,WAAOM,GAAGC,QAAQC,qBAChBC,iBAAiBC,MAAM;MACrB,GAAGjB;MACHkB,SAAS;QACP,GAAGlB,QAAQkB;QACXC,YAAY;QACZC,SAAS;MACX;IACF,CAAA,EAAGnB,MAAAA,EAAAA,EAAUQ,MAAMD,KAAKa,YAAW,EAAGC,KAAI,CAAA,GAC1CC,QACArB,WAAWsB,UAAUC,SAAS;MAACvB,WAAWsB,UAAU,CAAA;QAAOD,MAAAA;EAE/D;AACJ,GApCiBzB,sBAAAA,oBAAAA,CAAAA,EAAAA;","names":["ts","RandomTransformer","transform","project","modulo","expression","typeArguments","TransformerError","code","getText","message","node","type","checker","getTypeFromTypeNode","isTypeParameter","ts","factory","createCallExpression","RandomProgrammer","write","options","functional","numeric","getFullText","trim","undefined","arguments","length"]}