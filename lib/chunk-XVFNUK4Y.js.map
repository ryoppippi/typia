{"version":3,"sources":["../src/factories/internal/metadata/iterate_metadata_comment_tags.ts"],"names":["iterate_metadata_comment_tags","errors","object","tagged_","property","properties","MetadataCommentTagFactory","analyze","value","jsDocTags","top","key","isSoleLiteral","getSoleLiteral","nested","escaped","aliased"],"mappings":";;;;;;;;AAKO,IAAMA,gCACX,wBAACC,WAAqC,CAACC,WAAAA;AACrC,MAAIA,OAAOC,YAAY,KAAM;AAC7BD,SAAOC,UAAU;AAEjB,aAAWC,YAAYF,OAAOG,YAAY;AACxCC,8BAA0BC,QAAQN,MAAAA,EAAQG,SAASI,KAAK,EACtDJ,SAASK,WACT;MACEC,KAAK;MACLR;MACAE,UAAUA,SAASO,IAAIC,cAAa,IAChCR,SAASO,IAAIE,eAAc,IAC3B,CAAC;MACLC,QAAQ;MACRC,SAAS;MACTC,SAAS;IACX,CAAA;EAEJ;AACF,GAnBA","sourcesContent":["import { MetadataObject } from \"../../../schemas/metadata/MetadataObject\";\n\nimport { MetadataCommentTagFactory } from \"../../MetadataCommentTagFactory\";\nimport { MetadataFactory } from \"../../MetadataFactory\";\n\nexport const iterate_metadata_comment_tags =\n  (errors: MetadataFactory.IError[]) => (object: MetadataObject) => {\n    if (object.tagged_ === true) return;\n    object.tagged_ = true;\n\n    for (const property of object.properties) {\n      MetadataCommentTagFactory.analyze(errors)(property.value)(\n        property.jsDocTags,\n        {\n          top: false,\n          object,\n          property: property.key.isSoleLiteral()\n            ? property.key.getSoleLiteral()!\n            : {},\n          nested: null,\n          escaped: false,\n          aliased: false,\n        },\n      );\n    }\n  };\n"]}