{"version":3,"sources":["../src/transformers/TransformerError.ts"],"sourcesContent":["import { MetadataFactory } from \"../factories/MetadataFactory\";\n\nimport { MetadataObject } from \"../schemas/metadata/MetadataObject\";\n\nimport { Escaper } from \"../utils/Escaper\";\n\nexport class TransformerError extends Error {\n  public readonly code: string;\n\n  public constructor(props: TransformerError.IProps) {\n    super(props.message);\n    this.code = props.code;\n\n    // INHERITANCE POLYFILL\n    const proto = new.target.prototype;\n    if (Object.setPrototypeOf) Object.setPrototypeOf(this, proto);\n    else (this as any).__proto__ = proto;\n  }\n}\nexport namespace TransformerError {\n  export interface IProps {\n    code: string;\n    message: string;\n  }\n\n  export const from =\n    (method: string) =>\n    (errors: MetadataFactory.IError[]): TransformerError => {\n      const body: string = errors\n        .map((e) => {\n          const subject: string =\n            e.explore.object === null\n              ? \"\"\n              : join(e.explore.object)(e.explore.property);\n          const type: string = `${subject.length ? `${subject}: ` : \"\"}${\n            e.name\n          }`;\n          return `- ${type}\\n${e.messages\n            .map((msg) => `  - ${msg}`)\n            .join(\"\\n\")}`;\n        })\n        .join(\"\\n\\n\");\n      return new TransformerError({\n        code: method,\n        message: `unsupported type detected\\n\\n${body}`,\n      });\n    };\n\n  const join = (object: MetadataObject) => (key: string | object | null) => {\n    if (key === null) return object.name;\n    else if (typeof key === \"object\") return `${object.name}[key]`;\n    else if (Escaper.variable(key)) return `${object.name}.${key}`;\n    return `${object.name}[${JSON.stringify(key)}]`;\n  };\n}\n"],"mappings":";;;;;;;;AAMO,IAAMA,mBAAN,cAA+BC,MAAAA;EAFtC,OAEsCA;;;EACpBC;EAEhB,YAAmBC,OAAgC;AACjD,UAAMA,MAAMC,OAAO;AACnB,SAAKF,OAAOC,MAAMD;AAGlB,UAAMG,QAAQ,WAAWC;AACzB,QAAIC,OAAOC,eAAgBD,QAAOC,eAAe,MAAMH,KAAAA;QACjD,MAAaI,YAAYJ;EACjC;AACF;UACiBL,mBAAAA;oBAMFU,OACX,CAACC,WACD,CAACC,WAAAA;AACC,UAAMC,OAAeD,OAClBE,IAAI,CAACC,MAAAA;AACJ,YAAMC,UACJD,EAAEE,QAAQC,WAAW,OACjB,KACAC,KAAKJ,EAAEE,QAAQC,MAAM,EAAEH,EAAEE,QAAQG,QAAQ;AAC/C,YAAMC,OAAe,GAAGL,QAAQM,SAAS,GAAGN,OAAAA,OAAc,EAAA,GACxDD,EAAEQ,IAAI;AAER,aAAO,KAAKF,IAAAA;EAASN,EAAES,SACpBV,IAAI,CAACW,QAAQ,OAAOA,GAAAA,EAAK,EACzBN,KAAK,IAAA,CAAA;IACV,CAAA,EACCA,KAAK,MAAA;AACR,WAAO,IAAInB,kBAAiB;MAC1BE,MAAMS;MACNP,SAAS;;EAAgCS,IAAAA;IAC3C,CAAA;EACF;AAEF,QAAMM,OAAO,wBAACD,WAA2B,CAACQ,QAAAA;AACxC,QAAIA,QAAQ,KAAM,QAAOR,OAAOK;aACvB,OAAOG,QAAQ,SAAU,QAAO,GAAGR,OAAOK,IAAI;aAC9CI,QAAQC,SAASF,GAAAA,EAAM,QAAO,GAAGR,OAAOK,IAAI,IAAIG,GAAAA;AACzD,WAAO,GAAGR,OAAOK,IAAI,IAAIM,KAAKC,UAAUJ,GAAAA,CAAAA;EAC1C,GALa;AAMf,GAnCiB1B,qBAAAA,mBAAAA,CAAAA,EAAAA;","names":["TransformerError","Error","code","props","message","proto","prototype","Object","setPrototypeOf","__proto__","from","method","errors","body","map","e","subject","explore","object","join","property","type","length","name","messages","msg","key","Escaper","variable","JSON","stringify"]}