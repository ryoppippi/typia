{"version":3,"sources":["../src/factories/internal/metadata/iterate_metadata_coalesce.ts"],"names":["ts","iterate_metadata_coalesce","meta","type","filter","flag","getFlags","TypeFlags","Unknown","Any","Writable","any","Null","nullable","Undefined","Never","Void","VoidLike","required","TypeFactory","isFunction","functional"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAQ;AAQR,IAAMC,4BAA4B,wBACvCC,MACAC,SAAAA;AAEA,QAAMC,SAAS,wBAACC,UAAwBF,KAAKG,SAAQ,IAAKD,UAAU,GAArD;AACf,MAAID,OAAOJ,GAAGO,UAAUC,OAAO,KAAKJ,OAAOJ,GAAGO,UAAUE,GAAG,GAAG;AAC5DC,aAASR,IAAAA,EAAMS,MAAM;AACrB,WAAO;EACT,WAAWP,OAAOJ,GAAGO,UAAUK,IAAI,GAAG;AACpCF,aAASR,IAAAA,EAAMW,WAAW;AAC1B,WAAO;EACT,WACET,OAAOJ,GAAGO,UAAUO,SAAS,KAC7BV,OAAOJ,GAAGO,UAAUQ,KAAK,KACzBX,OAAOJ,GAAGO,UAAUS,IAAI,KACxBZ,OAAOJ,GAAGO,UAAUU,QAAQ,GAC5B;AACAP,aAASR,IAAAA,EAAMgB,WAAW;AAC1B,WAAO;EACT,WAAWC,YAAYC,WAAWjB,IAAAA,MAAU,MAAM;AAChDO,aAASR,IAAAA,EAAMmB,aAAa;AAC5B,WAAO;EACT;AACA,SAAO;AACT,GAxByC","sourcesContent":["import ts from \"typescript\";\n\nimport { Metadata } from \"../../../schemas/metadata/Metadata\";\n\nimport { Writable } from \"../../../typings/Writable\";\n\nimport { TypeFactory } from \"../../TypeFactory\";\n\nexport const iterate_metadata_coalesce = (\n  meta: Metadata,\n  type: ts.Type,\n): boolean => {\n  const filter = (flag: ts.TypeFlags) => (type.getFlags() & flag) !== 0;\n  if (filter(ts.TypeFlags.Unknown) || filter(ts.TypeFlags.Any)) {\n    Writable(meta).any = true;\n    return true;\n  } else if (filter(ts.TypeFlags.Null)) {\n    Writable(meta).nullable = true;\n    return true;\n  } else if (\n    filter(ts.TypeFlags.Undefined) ||\n    filter(ts.TypeFlags.Never) ||\n    filter(ts.TypeFlags.Void) ||\n    filter(ts.TypeFlags.VoidLike)\n  ) {\n    Writable(meta).required = false;\n    return true;\n  } else if (TypeFactory.isFunction(type) === true) {\n    Writable(meta).functional = true;\n    return true;\n  }\n  return false;\n};\n"]}