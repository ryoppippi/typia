{"version":3,"sources":["../src/functional/$convention.ts"],"names":["$convention","rename","main","input","Array","isArray","map","Boolean","BigInt","Number","String","valueOf","Date","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","BigUint64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","Float32Array","Float64Array","DataView","object","Object","fromEntries","entries","key","value"],"mappings":";;;;;AAAO,IAAMA,cAAc,wBAACC,WAAAA;AAC1B,QAAMC,OAAO,wBAACC,UAAAA;AACZ,QAAI,OAAOA,UAAU,SACnB,KAAIA,UAAU,KAAM,QAAO;aAClBC,MAAMC,QAAQF,KAAAA,EAAQ,QAAOA,MAAMG,IAAIJ,IAAAA;aAE9CC,iBAAiBI,WACjBJ,iBAAiBK,UACjBL,iBAAiBM,UACjBN,iBAAiBO,OAEjB,QAAOP,MAAMQ,QAAO;aACbR,iBAAiBS,KAAM,QAAO,IAAIA,KAAKT,KAAAA;aAE9CA,iBAAiBU,cACjBV,iBAAiBW,qBACjBX,iBAAiBY,eACjBZ,iBAAiBa,eACjBb,iBAAiBc,kBACjBd,iBAAiBe,aACjBf,iBAAiBgB,cACjBhB,iBAAiBiB,cACjBjB,iBAAiBkB,iBACjBlB,iBAAiBmB,gBACjBnB,iBAAiBoB,gBACjBpB,iBAAiBqB,SAEjB,QAAOrB;QACJ,QAAOsB,OAAOtB,KAAAA;AACrB,WAAOA;EACT,GA7Ba;AA8Bb,QAAMsB,SAAS,wBAACtB,UACduB,OAAOC,YACLD,OAAOE,QAAQzB,KAAAA,EAAOG,IAAI,CAAC,CAACuB,KAAKC,KAAAA,MAAW;IAAC7B,OAAO4B,GAAAA;IAAM3B,KAAK4B,KAAAA;GAAO,CAAA,GAF3D;AAIf,SAAO5B;AACT,GApC2B","sourcesContent":["export const $convention = (rename: (str: string) => string) => {\n  const main = (input: any): any => {\n    if (typeof input === \"object\")\n      if (input === null) return null;\n      else if (Array.isArray(input)) return input.map(main);\n      else if (\n        input instanceof Boolean ||\n        input instanceof BigInt ||\n        input instanceof Number ||\n        input instanceof String\n      )\n        return input.valueOf();\n      else if (input instanceof Date) return new Date(input);\n      else if (\n        input instanceof Uint8Array ||\n        input instanceof Uint8ClampedArray ||\n        input instanceof Uint16Array ||\n        input instanceof Uint32Array ||\n        input instanceof BigUint64Array ||\n        input instanceof Int8Array ||\n        input instanceof Int16Array ||\n        input instanceof Int32Array ||\n        input instanceof BigInt64Array ||\n        input instanceof Float32Array ||\n        input instanceof Float64Array ||\n        input instanceof DataView\n      )\n        return input;\n      else return object(input);\n    return input;\n  };\n  const object = (input: Record<string, any>) =>\n    Object.fromEntries(\n      Object.entries(input).map(([key, value]) => [rename(key), main(value)]),\n    );\n  return main;\n};\n"]}