{"version":3,"sources":["../src/schemas/metadata/MetadataTupleType.ts"],"names":["MetadataTupleType","name","elements","index","recursive","nullables","of_map","props","_From_without_elements","create","slice","isRest","length","rest","toJSON","map","elem"],"mappings":";;;;;AAKO,IAAMA,oBAAN,MAAMA,mBAAAA;EAAb,OAAaA;;;EACKC;EACAC;EAEAC;EACAC;EACAC;;;;EAKTC;;;;EAKP,YAAoBC,OAA2C;AAC7D,SAAKN,OAAOM,MAAMN;AAClB,SAAKC,WAAWK,MAAML;AACtB,SAAKC,QAAQI,MAAMJ;AACnB,SAAKC,YAAYG,MAAMH;AACvB,SAAKC,YAAYE,MAAMF;EACzB;;;;EAKA,OAAcG,uBACZD,OACmB;AACnB,WAAOP,mBAAkBS,OAAO;MAC9BR,MAAMM,MAAMN;MACZE,OAAOI,MAAMJ;MACbD,UAAU;MACVE,WAAWG,MAAMH;MACjBC,WAAWE,MAAMF,UAAUK,MAAK;IAClC,CAAA;EACF;EAEA,OAAcD,OACZF,OACmB;AACnB,WAAO,IAAIP,mBAAkBO,KAAAA;EAC/B;EAEOI,SAAkB;AACvB,WACE,KAAKT,SAASU,SAAS,KACvB,KAAKV,SAAS,KAAKA,SAASU,SAAS,CAAA,EAAIC,SAAS;EAEtD;EAEOC,SAA6B;AAClC,WAAO;MACLb,MAAM,KAAKA;MACXE,OAAO,KAAKA;MACZD,UAAU,KAAKA,SAASa,IAAI,CAACC,SAASA,KAAKF,OAAM,CAAA;MACjDV,WAAW,KAAKA;MAChBC,WAAW,KAAKA,UAAUK,MAAK;IACjC;EACF;AACF","sourcesContent":["import { ClassProperties } from \"../../typings/ClassProperties\";\n\nimport { IMetadataTupleType } from \"./IMetadataTupleType\";\nimport { Metadata } from \"./Metadata\";\n\nexport class MetadataTupleType {\n  public readonly name: string;\n  public readonly elements: Metadata[];\n\n  public readonly index: number | null;\n  public readonly recursive: boolean;\n  public readonly nullables: boolean[];\n\n  /**\n   * @internal\n   */\n  public of_map?: boolean;\n\n  /**\n   * @internal\n   */\n  private constructor(props: ClassProperties<MetadataTupleType>) {\n    this.name = props.name;\n    this.elements = props.elements;\n    this.index = props.index;\n    this.recursive = props.recursive;\n    this.nullables = props.nullables;\n  }\n\n  /**\n   * @internal\n   */\n  public static _From_without_elements(\n    props: Omit<IMetadataTupleType, \"elements\">,\n  ): MetadataTupleType {\n    return MetadataTupleType.create({\n      name: props.name,\n      index: props.index,\n      elements: null!,\n      recursive: props.recursive,\n      nullables: props.nullables.slice(),\n    });\n  }\n\n  public static create(\n    props: ClassProperties<MetadataTupleType>,\n  ): MetadataTupleType {\n    return new MetadataTupleType(props);\n  }\n\n  public isRest(): boolean {\n    return (\n      this.elements.length > 0 &&\n      this.elements[this.elements.length - 1]!.rest !== null\n    );\n  }\n\n  public toJSON(): IMetadataTupleType {\n    return {\n      name: this.name,\n      index: this.index,\n      elements: this.elements.map((elem) => elem.toJSON()),\n      recursive: this.recursive,\n      nullables: this.nullables.slice(),\n    };\n  }\n}\n"]}