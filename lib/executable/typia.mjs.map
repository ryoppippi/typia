{"version":3,"sources":["../../src/executable/typia.ts"],"sourcesContent":["#!/usr/bin/env node\nconst USAGE = `Wrong command has been detected. Use like below:\n\n  npx typia setup \\\\\n    --manager (npm|pnpm|yarn) \\\\\n    --project {tsconfig.json file path}\n\n    - npx typia setup\n    - npx typia setup --manager pnpm\n    - npx typia setup --project tsconfig.test.json\n\n  npx typia generate \n    --input {directory} \\\\\n    --output {directory}\n\n    --npx typia generate --input src/templates --output src/functinoal\n`;\n\nconst halt = (desc: string): never => {\n  console.error(desc);\n  process.exit(-1);\n};\n\nconst main = async (): Promise<void> => {\n  try {\n    await import(\"comment-json\");\n    await import(\"inquirer\");\n    await import(\"commander\");\n  } catch {\n    halt(`typia has not been installed. Run \"npm i typia\" before.`);\n  }\n\n  const type: string | undefined = process.argv[2];\n  if (type === \"setup\") {\n    const { TypiaSetupWizard } = await import(\"./TypiaSetupWizard.js\");\n    await TypiaSetupWizard.setup();\n  } else if (type === \"patch\") {\n    const { TypiaPatchWizard } = await import(\"./TypiaPatchWizard.js\");\n    await TypiaPatchWizard.main();\n  } else if (type === \"generate\") {\n    try {\n      await import(\"typescript\");\n    } catch {\n      halt(\n        `typescript has not been installed. Run \"npm i -D typescript\" before.`,\n      );\n    }\n    const { TypiaGenerateWizard } = await import(\"./TypiaGenerateWizard.js\");\n    await TypiaGenerateWizard.generate();\n  } else halt(USAGE);\n};\nmain().catch((exp) => {\n  console.error(exp);\n  process.exit(-1);\n});\n"],"mappings":";;;;;;AACA,IAAMA,QAAQ;;;;;;;;;;;;;;;;AAiBd,IAAMC,OAAO,wBAACC,SAAAA;AACZC,UAAQC,MAAMF,IAAAA;AACdG,UAAQC,KAAK,EAAC;AAChB,GAHa;AAKb,IAAMC,OAAO,mCAAA;AACX,MAAI;AACF,UAAM,OAAO,cAAA;AACb,UAAM,OAAO,UAAA;AACb,UAAM,OAAO,WAAA;EACf,QAAQ;AACNN,SAAK,yDAAyD;EAChE;AAEA,QAAMO,OAA2BH,QAAQI,KAAK,CAAA;AAC9C,MAAID,SAAS,SAAS;AACpB,UAAM,EAAEE,iBAAgB,IAAK,MAAM,OAAO,wBAAA;AAC1C,UAAMA,iBAAiBC,MAAK;EAC9B,WAAWH,SAAS,SAAS;AAC3B,UAAM,EAAEI,iBAAgB,IAAK,MAAM,OAAO,wBAAA;AAC1C,UAAMA,iBAAiBL,KAAI;EAC7B,WAAWC,SAAS,YAAY;AAC9B,QAAI;AACF,YAAM,OAAO,YAAA;IACf,QAAQ;AACNP,WACE,sEAAsE;IAE1E;AACA,UAAM,EAAEY,oBAAmB,IAAK,MAAM,OAAO,2BAAA;AAC7C,UAAMA,oBAAoBC,SAAQ;EACpC,MAAOb,MAAKD,KAAAA;AACd,GA3Ba;AA4BbO,KAAAA,EAAOQ,MAAM,CAACC,QAAAA;AACZb,UAAQC,MAAMY,GAAAA;AACdX,UAAQC,KAAK,EAAC;AAChB,CAAA;","names":["USAGE","halt","desc","console","error","process","exit","main","type","argv","TypiaSetupWizard","setup","TypiaPatchWizard","TypiaGenerateWizard","generate","catch","exp"]}