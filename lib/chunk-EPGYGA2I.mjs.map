{"version":3,"sources":["../src/programmers/helpers/AtomicPredicator.ts"],"sourcesContent":["import { Metadata } from \"../../schemas/metadata/Metadata\";\n\nimport { Atomic } from \"../../typings/Atomic\";\n\nimport { ArrayUtil } from \"../../utils/ArrayUtil\";\n\nexport namespace AtomicPredicator {\n  export const constant =\n    (meta: Metadata) =>\n    (name: Atomic.Literal): boolean =>\n      !ArrayUtil.has(meta.natives, (native) => native.toLowerCase() === name);\n\n  export const atomic =\n    (meta: Metadata) =>\n    (name: Atomic.Literal): boolean =>\n      !ArrayUtil.has(meta.natives, (native) => native.toLowerCase() === name);\n\n  export const native = (name: string) => LIKE.has(name.toLowerCase());\n\n  export const template = (meta: Metadata): boolean =>\n    !ArrayUtil.has(meta.natives, (native) => native.toLowerCase() === \"string\");\n}\n\nconst LIKE = new Set([\"boolean\", \"bigint\", \"number\", \"string\"]);\n"],"mappings":";;;;;;UAMiBA,mBAAAA;oBACFC,WACX,CAACC,SACD,CAACC,SACC,CAACC,UAAUC,IAAIH,KAAKI,SAAS,CAACC,WAAWA,OAAOC,YAAW,MAAOL,IAAAA;oBAEzDM,SACX,CAACP,SACD,CAACC,SACC,CAACC,UAAUC,IAAIH,KAAKI,SAAS,CAACC,WAAWA,OAAOC,YAAW,MAAOL,IAAAA;oBAEzDI,SAAS,CAACJ,SAAiBO,KAAKL,IAAIF,KAAKK,YAAW,CAAA;oBAEpDG,WAAW,CAACT,SACvB,CAACE,UAAUC,IAAIH,KAAKI,SAAS,CAACC,WAAWA,OAAOC,YAAW,MAAO,QAAA;AACtE,GAfiBR,qBAAAA,mBAAAA,CAAAA,EAAAA;AAiBjB,IAAMU,OAAO,oBAAIE,IAAI;EAAC;EAAW;EAAU;EAAU;CAAS;","names":["AtomicPredicator","constant","meta","name","ArrayUtil","has","natives","native","toLowerCase","atomic","LIKE","template","Set"]}