{"version":3,"sources":["../src/functional/$number.ts"],"names":["$number","value","isFinite","TypeGuardError","method","expected","message"],"mappings":";;;;;;;;AAEO,IAAMA,UAAU,wBAACC,UAAAA;AACtB,MAAIC,SAASD,KAAAA,MAAW,MACtB,OAAM,IAAIE,eAAe;IACvBC,QAAQ;IACRC,UAAU;IACVJ;IACAK,SAAS;EACX,CAAA;AACF,SAAOL;AACT,GATuB","sourcesContent":["import { TypeGuardError } from \"../TypeGuardError\";\n\nexport const $number = (value: number): number => {\n  if (isFinite(value) === false)\n    throw new TypeGuardError({\n      method: \"typia.json.stringify\",\n      expected: \"number\",\n      value,\n      message: \"Error on typia.json.stringify(): infinite or not a number.\",\n    });\n  return value;\n};\n"]}